# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
 
env:
  APP_DB_USERNAME: postgres
  APP_DB_PASSWORD: postgres
  APP_DB_NAME: postgres
  SONAR_PROJECT_KEY: YasCay_go-microservice
  SONAR_ORGANIZATION: yascay

jobs:
  build:
    name: Build and Test Code
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    # Cache Go modules to speed up the build
    - name: Go Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21
        cache: false # Disabling built-in cache since we're using our custom cache step

    # Start postgresql docker container
    - name: Start postgresql Container
      run: docker run --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=${APP_DB_PASSWORD} -e POSTGRES_USER=${APP_DB_USERNAME} -e POSTGRES_DB=${APP_DB_NAME} -d postgres

    - name: Build
      run: go build -v ./...

    - name: Test with coverage
      run: go test -v -coverprofile=coverage.out -covermode=count ./...

    - name: Save coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.out
          
  sonarCloud:
    needs: build
    name: SonarCloud Code Analysis
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: .
      
      # Using the recommended SonarQube scan action instead of the deprecated one
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
